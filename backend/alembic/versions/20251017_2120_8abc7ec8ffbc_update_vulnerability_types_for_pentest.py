"""update_vulnerability_types_for_pentest

Revision ID: 8abc7ec8ffbc
Revises: fe1a5c2c39d2
Create Date: 2025-10-17 21:20:19.588027

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8abc7ec8ffbc'
down_revision = 'fe1a5c2c39d2'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Step 1: Create new ENUM type with all pentest categories
    op.execute("""
        CREATE TYPE vulnerabilitytype_new AS ENUM (
            'Network',
            'Active Directory',
            'LDAP',
            'DNS',
            'Mail Server',
            'VPN',
            'Firewall',
            'Windows',
            'Linux',
            'Unix',
            'macOS',
            'Web Application',
            'API',
            'Android',
            'iOS',
            'Thick Client',
            'Database',
            'MS SQL Server',
            'MySQL/MariaDB',
            'PostgreSQL',
            'MongoDB',
            'Oracle',
            'AWS',
            'Azure',
            'GCP',
            'Cloud',
            'Authentication',
            'Authorization',
            'Cryptography',
            'IoT',
            'SCADA/ICS',
            'Physical Security',
            'Social Engineering',
            'Wireless',
            'VoIP',
            'Container/Docker',
            'Kubernetes',
            'CI/CD',
            'Configuration',
            'Other'
        )
    """)

    # Step 2: Alter column to text temporarily
    op.execute("""
        ALTER TABLE vulnerabilities
        ALTER COLUMN type TYPE text
        USING type::text
    """)

    # Step 3: Update existing data to map old values to new ones
    op.execute("""
        UPDATE vulnerabilities
        SET type = CASE
            WHEN type = 'Technical' THEN 'Web Application'
            WHEN type = 'Organizational' THEN 'Configuration'
            WHEN type = 'Physical' THEN 'Physical Security'
            ELSE 'Other'
        END
    """)

    # Step 4: Alter column to use new ENUM type
    op.execute("""
        ALTER TABLE vulnerabilities
        ALTER COLUMN type TYPE vulnerabilitytype_new
        USING type::vulnerabilitytype_new
    """)

    # Step 5: Drop old ENUM type
    op.execute("DROP TYPE vulnerabilitytype")

    # Step 6: Rename new type to original name
    op.execute("ALTER TYPE vulnerabilitytype_new RENAME TO vulnerabilitytype")


def downgrade() -> None:
    # Step 1: Create old ENUM type
    op.execute("""
        CREATE TYPE vulnerabilitytype_old AS ENUM (
            'Technical',
            'Organizational',
            'Physical'
        )
    """)

    # Step 2: Update data back to old values
    op.execute("""
        UPDATE vulnerabilities
        SET type = CASE
            WHEN type IN ('Web Application', 'API', 'Android', 'iOS', 'Database', 'Network', 'Windows', 'Linux')
                THEN 'Technical'
            WHEN type IN ('Configuration', 'CI/CD')
                THEN 'Organizational'
            WHEN type = 'Physical Security'
                THEN 'Physical'
            ELSE 'Technical'
        END::text::vulnerabilitytype_old
    """)

    # Step 3: Alter column back
    op.execute("""
        ALTER TABLE vulnerabilities
        ALTER COLUMN type TYPE vulnerabilitytype_old
        USING type::text::vulnerabilitytype_old
    """)

    # Step 4: Drop new type
    op.execute("DROP TYPE vulnerabilitytype")

    # Step 5: Rename old type back
    op.execute("ALTER TYPE vulnerabilitytype_old RENAME TO vulnerabilitytype")
