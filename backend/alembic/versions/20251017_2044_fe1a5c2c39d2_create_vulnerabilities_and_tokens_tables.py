"""create_vulnerabilities_and_tokens_tables

Revision ID: fe1a5c2c39d2
Revises: 20251017_add_username
Create Date: 2025-10-17 20:44:42.285969

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fe1a5c2c39d2'
down_revision = '20251017_add_username'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_user_id', sa.UUID(), nullable=False),
    sa.Column('label', sa.String(length=128), nullable=False),
    sa.Column('token_hash', sa.String(length=128), nullable=False),
    sa.Column('scopes', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_ip', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_tokens_owner_user_id'), 'api_tokens', ['owner_user_id'], unique=False)
    op.create_index(op.f('ix_api_tokens_token_hash'), 'api_tokens', ['token_hash'], unique=True)
    op.create_table('vulnerabilities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('level', sa.Enum('CRITICAL', 'HIGH', 'MEDIUM', 'LOW', 'INFO', name='vulnerabilitylevel'), nullable=False),
    sa.Column('scope', sa.Text(), nullable=False),
    sa.Column('protocol_interface', sa.String(length=255), nullable=False),
    sa.Column('cvss_score', sa.Float(), nullable=True),
    sa.Column('cvss_vector', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('risk', sa.Text(), nullable=False),
    sa.Column('recommendation', sa.Text(), nullable=False),
    sa.Column('type', sa.Enum('TECHNICAL', 'ORGANIZATIONAL', 'PHYSICAL', name='vulnerabilitytype'), nullable=False),
    sa.Column('tag_order', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vulnerabilities_cvss_score'), 'vulnerabilities', ['cvss_score'], unique=False)
    op.create_index(op.f('ix_vulnerabilities_level'), 'vulnerabilities', ['level'], unique=False)
    op.create_index(op.f('ix_vulnerabilities_name'), 'vulnerabilities', ['name'], unique=False)
    op.create_index(op.f('ix_vulnerabilities_protocol_interface'), 'vulnerabilities', ['protocol_interface'], unique=False)
    op.create_index(op.f('ix_vulnerabilities_type'), 'vulnerabilities', ['type'], unique=False)
    op.create_index(op.f('ix_vulnerabilities_updated_at'), 'vulnerabilities', ['updated_at'], unique=False)
    op.create_table('vulnerability_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('vulnerability_id', sa.UUID(), nullable=False),
    sa.Column('snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_by', sa.UUID(), nullable=True),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['vulnerability_id'], ['vulnerabilities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vulnerability_history_vulnerability_id'), 'vulnerability_history', ['vulnerability_id'], unique=False)
    op.drop_constraint('sessions_user_id_fkey', 'sessions', type_='foreignkey')
    op.create_foreign_key(None, 'sessions', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'sessions', type_='foreignkey')
    op.create_foreign_key('sessions_user_id_fkey', 'sessions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_vulnerability_history_vulnerability_id'), table_name='vulnerability_history')
    op.drop_table('vulnerability_history')
    op.drop_index(op.f('ix_vulnerabilities_updated_at'), table_name='vulnerabilities')
    op.drop_index(op.f('ix_vulnerabilities_type'), table_name='vulnerabilities')
    op.drop_index(op.f('ix_vulnerabilities_protocol_interface'), table_name='vulnerabilities')
    op.drop_index(op.f('ix_vulnerabilities_name'), table_name='vulnerabilities')
    op.drop_index(op.f('ix_vulnerabilities_level'), table_name='vulnerabilities')
    op.drop_index(op.f('ix_vulnerabilities_cvss_score'), table_name='vulnerabilities')
    op.drop_table('vulnerabilities')
    op.drop_index(op.f('ix_api_tokens_token_hash'), table_name='api_tokens')
    op.drop_index(op.f('ix_api_tokens_owner_user_id'), table_name='api_tokens')
    op.drop_table('api_tokens')
    # ### end Alembic commands ###
