"""fix_vulnerabilitylevel_enum

Revision ID: fix_vulnerabilitylevel
Revises: 8abc7ec8ffbc
Create Date: 2025-10-17 23:40:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fix_vulnerabilitylevel'
down_revision = '8abc7ec8ffbc'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Step 1: Create new ENUM type with proper values (not names)
    op.execute("""
        CREATE TYPE vulnerabilitylevel_new AS ENUM (
            'Critical',
            'High',
            'Medium',
            'Low',
            'Informational'
        )
    """)

    # Step 2: Alter column to text temporarily
    op.execute("""
        ALTER TABLE vulnerabilities
        ALTER COLUMN level TYPE text
        USING level::text
    """)

    # Step 3: Update existing data to map old values to new ones
    op.execute("""
        UPDATE vulnerabilities
        SET level = CASE
            WHEN level = 'CRITICAL' THEN 'Critical'
            WHEN level = 'HIGH' THEN 'High'
            WHEN level = 'MEDIUM' THEN 'Medium'
            WHEN level = 'LOW' THEN 'Low'
            WHEN level = 'INFO' THEN 'Informational'
            ELSE 'Medium'
        END
    """)

    # Step 4: Alter column to use new ENUM type
    op.execute("""
        ALTER TABLE vulnerabilities
        ALTER COLUMN level TYPE vulnerabilitylevel_new
        USING level::vulnerabilitylevel_new
    """)

    # Step 5: Drop old ENUM type
    op.execute("DROP TYPE vulnerabilitylevel")

    # Step 6: Rename new type to original name
    op.execute("ALTER TYPE vulnerabilitylevel_new RENAME TO vulnerabilitylevel")


def downgrade() -> None:
    # Step 1: Create old ENUM type
    op.execute("""
        CREATE TYPE vulnerabilitylevel_old AS ENUM (
            'CRITICAL',
            'HIGH',
            'MEDIUM',
            'LOW',
            'INFO'
        )
    """)

    # Step 2: Alter column to text
    op.execute("""
        ALTER TABLE vulnerabilities
        ALTER COLUMN level TYPE text
        USING level::text
    """)

    # Step 3: Update data back to old values
    op.execute("""
        UPDATE vulnerabilities
        SET level = CASE
            WHEN level = 'Critical' THEN 'CRITICAL'
            WHEN level = 'High' THEN 'HIGH'
            WHEN level = 'Medium' THEN 'MEDIUM'
            WHEN level = 'Low' THEN 'LOW'
            WHEN level = 'Informational' THEN 'INFO'
            ELSE 'MEDIUM'
        END
    """)

    # Step 4: Alter column back
    op.execute("""
        ALTER TABLE vulnerabilities
        ALTER COLUMN level TYPE vulnerabilitylevel_old
        USING level::vulnerabilitylevel_old
    """)

    # Step 5: Drop new type
    op.execute("DROP TYPE vulnerabilitylevel")

    # Step 6: Rename old type back
    op.execute("ALTER TYPE vulnerabilitylevel_old RENAME TO vulnerabilitylevel")
